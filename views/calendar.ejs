<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content="" />
  <meta name="author" content="Mark Otto, Jacob Thornton, and Bootstrap contributors" />
  <meta name="generator" content="Hugo 0.104.2" />
  <title>KeySchool Calendar</title>

  <link rel="canonical" href="https://getbootstrap.com/docs/5.2/examples/dashboard/" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css" />

  <link href="assets/dist/css/bootstrap.min.css" rel="stylesheet" />

  <style>
    ul {
      list-style: none;
      padding-left: 0px;
    }

    .bd-placeholder-img {
      font-size: 1.125rem;
      text-anchor: middle;
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
    }

    @media (min-width: 768px) {
      .bd-placeholder-img-lg {
        font-size: 3.5rem;
      }
    }

    .b-example-divider {
      height: 3rem;
      background-color: rgba(0, 0, 0, 0.1);
      border: solid rgba(0, 0, 0, 0.15);
      border-width: 1px 0;
      box-shadow: inset 0 0.5em 1.5em rgba(0, 0, 0, 0.1),
        inset 0 0.125em 0.5em rgba(0, 0, 0, 0.15);
    }

    .b-example-vr {
      flex-shrink: 0;
      width: 1.5rem;
      height: 100vh;
    }

    .bi {
      vertical-align: -0.125em;
      fill: currentColor;
    }

    .nav-scroller {
      position: relative;
      z-index: 2;
      height: 2.75rem;
      overflow-y: hidden;
    }

    .nav-scroller .nav {
      display: flex;
      flex-wrap: nowrap;
      padding-bottom: 1rem;
      margin-top: -1px;
      overflow-x: auto;
      text-align: center;
      white-space: nowrap;
      -webkit-overflow-scrolling: touch;
    }
  </style>

  <!-- Custom styles for this template -->
  <link href="dashboard.css" rel="stylesheet" />
</head>

<body>
  <div class="container-fluid">
    <div class="row">
      <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
        <div class="position-sticky pt-3 sidebar-sticky">
          <h6
            class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted text-uppercase">
            <span>KeyWords</span>
            <h3 id="email_id"></h3>
          </h6>
          <div id="key" class="list-group w-auto"></div>
          <label class="list-group-item d-flex gap-3 bg-light">
            <span class="pt-1 form-checked-content">
              <span contenteditable="true" class="w-100">Add new keywords</span>
              <input id="keyword" type="text" name="" value="" class="w-50" />
              <input id="append" type="button" name="" value="append" class="w-30"/>
            </span>
          </label>
        </div>
      </nav>

      <main class="col-md-6 ms-sm-auto col-lg-8 px-md-4">
        <div
          class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
          <h1 class="h2">Dashboard</h1>
        </div>
        <iframe id="google_email" src="" style="border: 0" width="100%" height="100%" frameborder="0"
          scrolling="no"></iframe>

        <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>
      </main>
      <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
        <div class="position-sticky pt-3 sidebar-sticky">
          <h6
            class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted text-uppercase">
            <span>일정목록</span>
            <a class="link-secondary" href="#" aria-label="Add a new report">
              <span data-feather="plus-circle" class="align-text-bottom"></span>
            </a>
          </h6>
          <div id="schedule" class="list-group w-auto"></div>
          <label class="list-group-item d-flex gap-3 bg-light">
            <span class="pt-1 form-checked-content">
              <span contenteditable="true" class="w-100">Add new schedule</span>
              <input id="s_title" type="text" name="" value="" class="w-100" placeholder="Title" />
              <input id="s_dead" type="text" name="" value="" class="w-100" placeholder="Deadline" />
              <input type="button" name="" value="append" class="w-100" onclick="addschedule()" />
            </span>
          </label>
        </div>
      </nav>
    </div>
  </div>

  <script src="assets/dist/js/bootstrap.bundle.min.js"></script>
  <script src="//code.jquery.com/jquery.min.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.14.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.14.0/firebase-firestore-compat.js"></script>
  <script type="text/javascript">
    // TODO: Add SDKs for Firebase products that you want to use
    // https://firebase.google.com/docs/web/setup#available-libraries

    // Your web app's Firebase configuration
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional
    const firebaseConfig = {
      apiKey: "AIzaSyAEGuIFzQ6MHzVBiq6Q0IgEypC_GwM4eEA",
      authDomain: "ise-team4.firebaseapp.com",
      projectId: "ise-team4",
      storageBucket: "ise-team4.appspot.com",
      messagingSenderId: "526463390715",
      appId: "1:526463390715:web:8dbf9d0a817049fe89715e",
      measurementId: "G-BT0FWC8KQV"
    };

    // Initialize Firebase
    const app = firebase.initializeApp(firebaseConfig);
    const db = app.firestore();
    db.settings({ timestampsInSnaphots: true });

    let skkuid = "<%= skkuid%>";
    let useremail = "<%= email%>";
    initkeys = {};

    async function get_doc() {
      return db.collection('accounts').where('skkuid', "==", skkuid).get();
    }
    async function get_keyword() {
      const snapshot = await get_doc();
      return snapshot.docs[0].data().keywords;
    }
    let promise = (async () => {
      const data = await get_keyword();
      return data;
    })();
    promise.then(function (value) {
      initkeys = value;
    }).then(function () {

      document.getElementById('key').innerHTML = "";
      for (let i = 0; i < initkeys.length; i++) {
        console.log(initkeys[i]);
        document.getElementById('key').innerHTML += '<label class="list-group-item d-flex gap-3"><span class="pt-1 form-checked-content"><i class="bi bi-dash-circle" onclick="" style="cursor:pointer"></i><strong>  ' + initkeys[i] + '</strong></span><label>';
      }

      let emaildomain = ""; //이메일 도메인
      let emailname = ""; //이메일 앞 부분 이름
      let frontpart = true;

      for (let i = 0; i < useremail?.length; i++) {
        if (useremail[i] !== "@" && frontpart) {
          emailname += useremail[i];
        } else if (useremail[i] === "@") {
          frontpart = false;
        } else if (!frontpart) {
          emaildomain += useremail[i];
        }
      }
      let str1 = "https://calendar.google.com/calendar/embed?src=";
      let str2 = emailname;
      let str3 = "%40" + emaildomain + "&ctz=Asia%2FSeoul";
      $("#google_email").attr('src', str1 + str2 + str3);

      var keywords = initkeys;
      var keylen = initkeys.length;
      var schedules = new Array(0);
      var schedulelen = 0;

      document.getElementById("append").addEventListener("click", function (event) {
        event.preventDefault();
        addkeyword();
      })
      function addkeyword() {
        var newkey = document.getElementById('keyword').value;

        if (newkey !== '') {
          if (keywords.includes(newkey)) {
            alert("이미 존재하는 키워드입니다.\nAlready existing keyword.");
          }
          else {
            keylen++;
            keywords.push(newkey);
            displaykeyword();
            document.getElementById('keyword').value = '';
            db.collection('accounts').where('skkuid', '==', skkuid).get().then((snapshot) => {
              snapshot.docs[0].ref.update({
                keywords: keywords
              })
            })
          }
        }
      }

      function displaykeyword() {
        document.getElementById('key').innerHTML = "";
        for (let i = 0; i < keylen; i++) {
          document.getElementById('key').innerHTML += createkeyword(keywords[i]);
        }
        let docs = document.getElementsByName('remove');
        for (let i = 0; i < docs.length; i++) {
          docs[i].addEventListener('click', function (event) {
            event.preventDefault();
            removekeyword(this.id);
          })
        }
        docs = document.getElementsByName('modify');
        for (let i = 0; i < docs.length; i++) {
          docs[i].addEventListener('click', function (event) {
            event.preventDefault();
            modifykeyword(this.id);
            let temp = document.getElementsByName('confirm');
            temp[0].addEventListener('click',function(event){
              event.preventDefault();
              modify(this.id);
            })
          })
        }
      }

      function createkeyword(keyword) {
        return '<label id="' + keyword + '" class="list-group-item d-flex gap-3"><span class="pt-1 form-checked-content"><i name="remove" class="bi bi-dash-circle" id="' + keyword + '" style="cursor:pointer"></i><i name="modify" class="bi bi-gear" id="' + keyword + '" onclick="" style="cursor:pointer"></i><strong>  ' + keyword + '</strong></span><label>'
      }
      function removekeyword(keyword) {
        for (let i = 0; i < keywords.length; i++) {
          if (keywords[i] === keyword) {
            keywords.splice(i, 1);
            keylen--;
            i--;
            db.collection('accounts').where('skkuid', '==', skkuid).get().then((snapshot) => {
              snapshot.docs[0].ref.update({
                keywords: keywords
              })
            })
          }
        }
        displaykeyword();
      }

      function modifykeyword(keyword) {
        document.getElementById(keyword).innerHTML = '<label class="list-group-item d-flex gap-3 bg-light"><span class="pt-1 form-checked-content"><input id="b' + keyword + '" type="text" name="" value="" class="w-50"><input id="' + keyword + '" type="button" name="confirm" value="modify" class="w-30" onclick=""></span></label>';
      }

      function modify(keyword) {
        mkey = document.getElementById('b' + keyword).value;
        if (mkey !== '') {
          if (keyword === mkey) {
            alert('수정 전과 동일한 키워드입니다.\nSame as before.');
          }
          else if (keywords.includes(mkey)) {
            alert('이미 존재하는 키워드입니다.\nAlready existing keyword.');
          }
          else {
            for (let i = 0; i < keylen; i++) {
              if (keywords[i] === keyword) {
                keywords[i] = mkey;
                db.collection('accounts').where('skkuid', '==', skkuid).get().then((snapshot) => {
                  snapshot.docs[0].ref.update({
                    keywords: keywords
                  })
                })
              }
            }
            displaykeyword();
          }
        }
      }

      function addschedule() {
        schedulelen++;
        var newtitle = document.getElementById('s_title').value;
        var newdead = document.getElementById('s_dead').value;
        schedules.push([newtitle, newdead]);
        console.log(schedules);
        displayschedule();
        document.getElementById('s_title').value = "";
        document.getElementById('s_dead').value = "";
      }

      function displayschedule() {
        document.getElementById('schedule').innerHTML = "";
        for (let i = 0; i < schedulelen; i++) {
          console.log(schedules[i]);
          document.getElementById('schedule').innerHTML += createschedule(schedules[i]);
        }
      }

      function createschedule(schedule) {
        return '<label class="list-group-item d-flex gap-3"><input class="form-check-input flex-shrink-0" type="checkbox" value=""  style="font-size: 1.375em;"><span class="pt-1 form-checked-content"><strong>' + schedule[0] + '</strong><small class="d-block text-muted"><svg class="bi me-1" width="1em" height="1em"><use xlink:href="#calendar-event"/></svg>' + schedule[1] + '</small></span></label>'
      }
    })
  </script>

  <script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js"
    integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
    integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha"
    crossorigin="anonymous"></script>
  <script src="dashboard.js"></script>
</body>

</html>