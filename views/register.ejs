<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Register</title>

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

  <style>
    body {
      min-height: 100vh;

      background: -webkit-gradient(linear, left bottom, right top, from(#92b5db), to(#1d466c));
      background: -webkit-linear-gradient(bottom left, #92b5db 0%, #1d466c 100%);
      background: -moz-linear-gradient(bottom left, #92b5db 0%, #1d466c 100%);
      background: -o-linear-gradient(bottom left, #92b5db 0%, #1d466c 100%);
      background: linear-gradient(to top right, #92b5db 0%, #1d466c 100%);
    }

    .input-form {
      max-width: 680px;

      margin-top: 80px;
      padding: 32px;

      background: #fff;
      -webkit-border-radius: 10px;
      -moz-border-radius: 10px;
      border-radius: 10px;
      -webkit-box-shadow: 0 8px 20px 0 rgba(0, 0, 0, 0.15);
      -moz-box-shadow: 0 8px 20px 0 rgba(0, 0, 0, 0.15);
      box-shadow: 0 8px 20px 0 rgba(0, 0, 0, 0.15)
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="input-form-backgroud row">
      <div class="input-form col-md-12 mx-auto">
        <h4 class="mb-3">회원가입</h4>
        <form class="validation-form" novalidate>
          <div class="row">
            <div class="col-md-6">
              <label for="name">이름</label>
              <input type="name" class="form-control" id="name" placeholder="" value="" required>
              <div class="invalid-feedback">
                이름을 입력해주세요.
              </div>
            </div>
            <div class="col-md-6 mb-3">
              <label for="student_id">학번</label>
              <input type="student_id" class="form-control" id="stuid" placeholder="" value="" required>
              <div class="invalid-feedback">
                학번을 입력해주세요.
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <label for="name">이메일</label>
              <input type="email" class="form-control" id="email" placeholder="" value="" required>
              <div class="invalid-feedback">
                이메일을 입력해주세요.
              </div>
            </div>
            <div class="col-md-6 mb-3">
              <label for="student_id">전화번호</label>
              <input type="phone" class="form-control" id="phone" placeholder="" value="" required>
              <div class="invalid-feedback">
                전화번호를 입력해주세요.
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label for="skku_account">성균관대학교 계정</label>
            <input type="skku_account" class="form-control" id="skku_account" placeholder="" required>
            <div class="invalid-feedback">
              성균관대학교 계정을 입력해주세요.
            </div>
          </div>

          <div class="mb-3">
            <label for="skku_password">비밀번호</label>
            <input type="skkupw" class="form-control" id="skkupw" placeholder="" required>
            <div class="invalid-feedback">
              성균관대학교 계정 비밀번호를 입력해주세요.
            </div>
          </div>

          <div class="mb-3">
            <label for="g_account">구글 계정</label>
            <input type="g_account" class="form-control" id="g_account" placeholder="" required>
            <div class="invalid-feedback">
              구글 계정을 입력해주세요.
            </div>
          </div>

          <div class="mb-3">
            <label for="g_password">구글 비밀번호</label>
            <input type="googlepw" class="form-control" id="googlepw" placeholder="" required>
            <div class="invalid-feedback">
              구글 비밀번호를 입력해주세요.
            </div>
          </div>


          <hr class="mb-4">
          <div class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" id="aggrement" required>
            <label class="custom-control-label" for="aggrement">개인정보 수집 및 이용에 동의합니다.</label>
          </div>
          <div class="mb-4"></div>
          <button class="btn btn-primary btn-lg btn-block" type="submit">가입 완료</button>
        </form>
      </div>
    </div>

  </div>
  <script src="https://www.gstatic.com/firebasejs/9.14.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.14.0/firebase-firestore-compat.js"></script>
  <script>
    // TODO: Add SDKs for Firebase products that you want to use
    // https://firebase.google.com/docs/web/setup#available-libraries

    // Your web app's Firebase configuration
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional
    const firebaseConfig = {
      apiKey: "AIzaSyAEGuIFzQ6MHzVBiq6Q0IgEypC_GwM4eEA",
      authDomain: "ise-team4.firebaseapp.com",
      projectId: "ise-team4",
      storageBucket: "ise-team4.appspot.com",
      messagingSenderId: "526463390715",
      appId: "1:526463390715:web:8dbf9d0a817049fe89715e",
      measurementId: "G-BT0FWC8KQV"
    };

    // Initialize Firebase
    const app = firebase.initializeApp(firebaseConfig);
    const db = app.firestore();
    db.settings({ timestampsInSnaphots: true });

    db.collection('accounts').add({
      name: ""
    })
    db.collection('accounts').where('name',"==",'').get().then(function(snapshot){
      snapshot.forEach(function(doc){
      doc.ref.delete();
      })
    });

    var naming, stuid, email, phone, skkuid, skkupw, googleid, googlepw;
    console.log("aaaaa");
    window.addEventListener('load', () => {

      const forms = document.getElementsByClassName('validation-form');
      Array.prototype.filter.call(forms, (form) => {
        form.addEventListener('submit', async function (event) {
          db.collection('accounts').where('skkuid',"==",document.getElementById('skku_account').value).get().then((snapshot)=>{
            if(!snapshot.empty){//중복 skkuid가 없을때 alert필요
              event.preventDefault();
              event.stopPropagation();
            }
            else if (form.checkValidity() === false) {//형식에 안맞을때 alert필요
              event.preventDefault();
              event.stopPropagation();
              /*const { a, b } = await createHashedPassword("test");
              print(a,b)*/
            }
            else {
              naming = document.getElementById('name').value;
              stuid = document.getElementById('stuid').value;
              email = document.getElementById('email').value;
              phone = document.getElementById('phone').value;
              skkuid = document.getElementById('skku_account').value;
              skkupw = document.getElementById('skkupw').value;
              googleid = document.getElementById('g_account').value;
              googlepw = document.getElementById('googlepw').value;
              // skkupw에 대해서 암호화 실행 
              //skkupw = await bcrypt.hash(skkupw, 10);

              // encrypt_password와 salt를 저장해야한다.
              db.collection('accounts').add({
                name: naming,
                stuid: stuid,
                email: email,
                phone: phone,
                skkuid: skkuid,
                skkupw: skkupw,
                googleid: googleid,
                googlepw: googlepw
              });
            }
            console.log("aaaaa");
            form.classList.add('was-validated');
          })
        }, false);
      });
    }, false);
  </script>
</body>

</html>